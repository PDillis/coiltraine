####General Configuration Parameters####
SAVE_SCHEDULE: range(0, 500001, 20000) # The iterations where training checkpoints are going to be saved
NUMBER_OF_LOADING_WORKERS: 12   # Number of threads used in the data loader
MAGICAL_SEED: 26957017

####Input related parameters####
# A dictionary with all the sensors that are going to be used as input
# this should match the train dataset
SENSORS:
  rgb: [3, 300, 400] # A RGB input sensor with three channels that is resized to 200x88 (central camera)
MEASUREMENTS:
  float_data: [31]  # Number of float data that must be read from the dataset
BATCH_SIZE: 128
NUMBER_ITERATIONS: 500001
TARGETS: ['steer', 'throttle', 'brake']  # From the float data, the ones that the network should estimate
INPUTS: ['speed'] # From the float data, the ones that are input to the neural network
NUMBER_FRAMES_FUSION: 1  # Number of frames fused
NUMBER_IMAGES_SEQUENCE: 1  # Number of frames sent in sequence
SEQUENCE_STRIDE: 1  # Number of frames skipped when reading the data
AUGMENT_LATERAL_STEERINGS: 6  # Depending on this value there is a constant multiplying lateral steers
SPEED_FACTOR: 12.0  # The constant that is divides the speed_module in order to make it from 0-1
TRAIN_DATASET_NAME: '20h_dataset_Epic'  # The name of the training dataset used. Must be inside COIL_DATASET_PATH folder
TRAIN_DATA_FPS: 20  # FPS of the saved dataset
AUGMENTATION: None  # The image augmentation applied on every input image
DATA_USED: 'all'  # The part of the data to be used
USE_NOISE_DATA: False  # If we use the noise data.
NUMBER_OF_HOURS: 1  # Number of hours to be taken from the input data
EXPERIENCE_FILE: '/home/dporres/cexp/database/sim2real/20h_dataset_Epic.json'

#### Testing Related Parameters ####
TEST_SCHEDULE: range(100000, 100001, 100000)  # The frequency the model is actually tested.

#### Model Related Parameters ####
# Network Parameters #
MODEL_TYPE: 'coil-icra' # The type of model. Defines which modules the model has.
PRE_TRAINED: False
MODEL_CONFIGURATION:  # Based on the MODEL_TYPE, we specify the structure
  perception:  # The module that process the image input, it outputs the number of classes
    res:
      name: 'resnet50'
      num_classes: 512

  measurements:
    fc:
      neurons: [128, 128]
      dropouts: [0.0, 0.0]
  join:
    fc:
      neurons: [512]
      dropouts: [0.0]
  speed_branch:
    fc:
      neurons: [256, 256]
      dropouts: [0.0, 0.5]
  branches:
    number_of_branches: 4
    fc:
      neurons: [256, 256]
      dropouts: [0.0, 0.5]


# Optimizer Parameters #
# For now we use only use adam
LEARNING_RATE: 0.0002  # Starting learning rate
LEARNING_RATE_DECAY_INTERVAL: 75000 # Number of iterations where the learning rate is reduced
LEARNING_RATE_THRESHOLD: 5000 # Number of iterations without going down to reduce learning rate
LEARNING_RATE_DECAY_LEVEL: 0.1 # The factor of reduction applied to the learning rate

# Loss Parameters #
BRANCH_LOSS_WEIGHT: [0.95, 0.95, 0.95, 0.95, 0.05] # how much each branch is weighted when computing loss
LOSS_FUNCTION: 'L1' # The loss function used
VARIABLE_WEIGHT: # how much each of the outputs specified on TARGETS are weighted for learning.
  Steer: 0.5
  Gas: 0.45
  Brake: 0.05


#### Simulation Related Parameters ####
IMAGE_CUT: [65, 460]  # How you should cut the input image that is received from the server
USE_ORACLE: False
USE_FULL_ORACLE: False
AVOID_STOPPING: False
